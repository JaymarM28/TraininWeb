// backend/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  cedula    String   @unique
  name      String
  password  String
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones para jerarquía de roles
  coachId   String? // Usuario asignado a un coach
  coach     User?   @relation("CoachUsers", fields: [coachId], references: [id])
  users     User[]  @relation("CoachUsers") // Usuarios que tiene asignados un coach

  // Relaciones de creación (quien creó a quien)
  createdBy   String? // Quien creó este usuario
  creator     User?   @relation("UserCreator", fields: [createdBy], references: [id])
  createdUsers User[] @relation("UserCreator")

  // Relaciones con contenido creado
  createdExercises Exercise[] @relation("ExerciseCreator")
  createdRoutines  Routine[]  @relation("RoutineCreator")

  @@map("users")
}

model Exercise {
  id          String   @id @default(cuid())
  name        String
  description String?
  videoUrl    String?
  imageUrl    String?
  category    String
  difficulty  Difficulty
  muscleGroup String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relación con el creador
  createdBy String
  creator   User   @relation("ExerciseCreator", fields: [createdBy], references: [id])

  routineExercises RoutineExercise[]

  @@map("exercises")
}

model Routine {
  id          String   @id @default(cuid())
  name        String
  description String?
  difficulty  Difficulty
  duration    Int      // en minutos
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relación con el creador
  createdBy String
  creator   User   @relation("RoutineCreator", fields: [createdBy], references: [id])

  exercises RoutineExercise[]

  @@map("routines")
}

model RoutineExercise {
  id         String @id @default(cuid())
  routineId  String
  exerciseId String
  sets       Int
  reps       String // "12" o "12-15" o "30 segundos"
  order      Int

  routine  Routine  @relation(fields: [routineId], references: [id], onDelete: Cascade)
  exercise Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)

  @@map("routine_exercises")
}

enum Role {
  ADMIN
  COACH
  USER
}

enum Difficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}